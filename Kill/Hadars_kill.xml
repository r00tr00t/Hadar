<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, September 20, 2016, 2:53 PM -->
<!-- MuClient version 5.01 -->

<muclient>
<plugin
   name="Hadars_Kill"
   author="Hadar"
   id="def114f15afbaa25a849fc4b"
   language="Lua"
   purpose="Change kill to an attack skill or spell"
   save_state="y"
   date_written="2016-09-20 14:51:44"
   requires="4.00"
   version="1.3"
   >
<description trim="y">
<![CDATA[
Can see all my help files with had help or just this one with setkill help
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->
<triggers>
  <trigger
   match="^(\d+),(.*),(\d+),(\d+),(\d+),([+-]?[0-9,]+),(\d+)$"
   name="upattack"
   enabled="n"
   regexp="y"
   send_to="12"
   script="SlistUpdate"
   group="HKillListCapture"
   sequence="100"
   omit_from_output="y"
  >
  </trigger>
  <trigger
	name="RecoveriesCapture"
	enabled="n"
	match="^[0-9]+,[^,]+,[0-9]+$"
	regexp="y"
	group="HKillListCapture"
	omit_from_output="y"
	sequence="100"
	>
	</trigger>
  <trigger
   enabled="n"
   name="HKListStart"
   match="^\{spellheaders hadarkill\}$"
   regexp="y"
   send_to="12"
   sequence="100"
   group="HKillListCapture"
   omit_from_output="y"
  >
  </trigger>
  <trigger
   enabled="n"
   name="HKListEnd"
   group="HKillListCapture"
   match="^\{\/spellheaders\}$"
   regexp="y"
   send_to="12"
   sequence="100"
   omit_from_output="y"
  >
  </trigger>
  <trigger
   enabled="n"
   group="HKillListCapture"
   match="^\{\/recoveries\}$"
   regexp="y"
   send_to="12"
   script="HKill_StopList"
   sequence="100"
   omit_from_output="y"
  >
  </trigger>
  <trigger
   enabled="n"
   group="HKillListCapture"
   match="^\{recoveries hadarkill\}$"
   regexp="y"
   send_to="12"
   sequence="100"
   omit_from_output="y"
  >
  </trigger>
</triggers>

<!--  Plugin help  -->

<aliases>
  <alias match="^had help$"
	enabled="y"
	sequence="99"
	send_to="12"
	regexp="y"
	keep_evaluating="y"
	>
	<send>
		HadarHelp()
	</send>
	</alias>
  <alias
   match="^kill( (.*))?"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
   script="Trogdor"
  >
  </alias>
    <alias
   match="^setkill( (.*))?"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
   script="SetKill"
  >
  </alias>
</aliases>

<script>
<![CDATA[
require "serialize"
dofile(GetInfo(60) .. "aardwolf_colors.lua")
changelog = "https://raw.githubusercontent.com/zzyzzyzzx/Hadar/master/Kill/ChangeLog.txt"
local HKslistCommandSent = false

function hadarprint(str,level)

	if level == "error" then
          AnsiNote(ColoursToANSI("@R[@MHK @rERROR@R]@W:@w"..str.."@w"))
     elseif level == "script" then
          AnsiNote(ColoursToANSI("@G[@CH@cadar's @CK@cill@G]@c "..str.."@w"))
     else
		AnsiNote(ColoursToANSI(str))
	end
	
end

function ismember(set, key)
    return key[set] ~= nil
end

function table.find(val, tbl) 
	tbl = tbl or {}
	if (tbl[val] ~= nil) then
		return tbl[val]
	end
	return nil
end

function SetKill(name, line, wildcards)
local v1 = Trim(string.lower(wildcards[1]))
	if v1=="update" then
		allskills={}
		allspells={}
		EnableTriggerGroup("HKillListCapture",true)
		SendSpecial("slist hadarkill")
	elseif table.find(v1, HadarKill["AS"]) ~= nil then
		HadarKill["GL"]["Attack"] = v1
		hadarprint("Attack Set to@W:@r"..v1.."@w","script")
	elseif v1 == "none" or v1 == "disable" then
		HadarKill["GL"]["Attack"] = "none"
		hadarprint("Attack skill/spell disabled","script")
	elseif v1 == "help" then
		HadarHelp()
	else
	hadarprint("Unknown command, use setkill update, setkill skill/spell or setkill none","error")
	end -- ends update
end --end setkill

function OnPluginInstall ()
   	if GetVariable ("enabled") == "false" then
		ColourNote ("yellow", "", "Warning: Plugin " .. GetPluginName ().. " is currently disabled.")
		check (EnablePlugin(GetPluginID (), false))
		return
	end -- they didn't enable us last time
  
	hadarprint("had help (to see all of hadar's plugin helpfiles), or setkill help to just see this one","script")

	OnPluginEnable ()
end --no more plugin install


function OnPluginEnable ()
	
	HadarKill = {}
	HadarKill["GL"] = {}
	HadarKill["AS"] = {}
	HadarKill["SK"] = {} --skills
	HadarKill["SP"] = {} --spells
	
	if GetVariable ("Killpastfirstinstall") == "true" then
		assert (loadstring (GetVariable ("HadarKill") or "")) ()
		injectVars()
	else
		hadarprint("Looks like this is your first install, Lets get you setup! hks for help","script")
		injectVars()
		HKillSlistSend()
	end
end

function OnPluginSaveState ()
	SetVariable ("HadarKill", "HadarKill = " .. serialize.save_simple (HadarKill))
	SetVariable ("Killpastfirstinstall", "true")
end -- nomore savestate

function injectVars()
	local v = {}
	v["GL"] = {} --global
	v["AS"] = {} --all spells
	v["SK"] = {} --skills
	v["SP"] = {} --spells
	
	v["GL"]["Logo"] = "@G[@CK@cills@G]@c "
	v["GL"]["Attack"] = "none"
	

	for a,b in pairs(v) do
		 for c,d in pairs(b) do
			  checkExist(a,c,d)
		 end
	end

end

function checkExist(tbl, idx, val) 

	if not HadarKill[tbl] then
		HadarKill[tbl] = {}
	end

	if not HadarKill[tbl][idx] then
		HadarKill[tbl][idx] = val
		SetVariable("HadarKill", serialize.save("HadarKill")) 
	end
	
end

function Trogdor(name, line, wildcards)
local v = Trim(wildcards[1])
local killtarget
	
	if v~=nil then
		killtarget=v
	else 
		killtarget=" "
	end
	
	if ismember(HadarKill["GL"]["Attack"],HadarKill["SP"]) then
		Send("cast '"..HadarKill["GL"]["Attack"].."' "..killtarget)
	elseif ismember(HadarKill["GL"]["Attack"],HadarKill["SK"]) then
		Send(HadarKill["GL"]["Attack"].." "..killtarget)
	else
		Send("kill "..killtarget)
	end
end

function SlistUpdate(name, line, wildcards)
	local sn = tonumber(wildcards[1]) --skill number
	local nm = wildcards[2]           --skill name
	local tg = tonumber(wildcards[3]) --target
	local du = tonumber(wildcards[4]) --duration
	local pc = tonumber(wildcards[5]) --percent praced
	local rc = tonumber(wildcards[6]) --recovery
	local ty = tonumber(wildcards[7]) --type
	
		if tg==1 or tg==0 then
			if ty==2 then
				HadarKill["AS"][nm] = sn
				HadarKill["SK"][nm] = sn
			end
			if ty==1 then
				HadarKill["AS"][nm] = sn
				HadarKill["SP"][nm] = sn
			end
		end
		
		SaveState()
end--end update

function HKillSlistSend()
	if (HKslistCommandSent == false) then
		HKslistCommandSent = true
		EnableTriggerGroup("HKillListCapture", true)
		EnableTrigger("HKRecoveriesStart", true)
		hadarprint("***Getting Skills/Spells","script")
		SendNoEcho("slist hadarkill")
	end
end

function HKill_StopList()
	EnableTriggerGroup("HKillListCapture",false)
	hadarprint(HadarKill["GL"]["Logo"].."skills and spells updated@w")
	SaveState()
end--no more slist parsing (hopefully)

function HadarHelp()
	hadarprint("@x086+------------------------@G[@CH@cadar @CK@cill @WV:"..GetPluginInfo (GetPluginID (), 19).."@G]@x086-------------------------+@w")
	hadarprint("@x086|                                                                   |@w")
	hadarprint("@x086| @x214setkill help           @x110-@x214 Shows this helpfile                      |@w")
	hadarprint("@x086| @x208setkill update         @x110-@x208 will update the skills/spells list       |@w")
	hadarprint("@x086| @x214setkill <skill/spells> @x110-@x214 will set the skill or spell to use       |@w")
	hadarprint("@x086|                                                                   |@w")
	hadarprint("@x086| @x208kill <name>            @x110-@x208 Will use the attack skill/spell on target|@w")
	hadarprint("@x086|                                                                   |@w")
	hadarprint("@x086+-------------------------------------------------------------------+@w")
end
]]>
</script> 

</muclient>
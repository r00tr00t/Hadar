<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, September 20, 2016, 2:53 PM -->
<!-- MuClient version 5.01 -->

<!-- Plugin "Hadars_qpstrackers" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Hadars_qpstrackers"
   author="Hadar"
   id="b19eab63739b58d5252b5132"
   language="Lua"
   purpose="track info from quests/cps/gqs on win/loss percentages, and more"
   save_state="y"
   date_written="2016-09-20 14:51:44"
   requires="4.00"
   version="1.55"
   >
<description trim="y">
<![CDATA[
reports quests (working on cps/gqs)
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->
<triggers>
  <trigger
   enabled="y"
   match="^You will now receive experience. Happy leveling!$"
   regexp="y"
   send_to="12"
   script="GetExp"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="^You will no longer receive experience. Happy questing!$"
   regexp="y"
   send_to="12"
   script="DontGetExp"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="^You raise a level! You are now level \d+.$"
   regexp="y"
   send_to="12"
   script="NowLeveled"
   sequence="100"
  >
  </trigger>
    <trigger
   enabled="y"
   match="* tells you 'Type 'campaign info' to see what you must kill.'"
   sequence="100"
   send_to="12"
  >
  <send>StartTime("cp")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^CONGRATULATIONS! You have completed your campaign.$"
   sequence="100"
   regexp="y"
   send_to="12"
  >
  <send>EnableTriggerGroup("campaignRewards", true)</send>
  </trigger>
  <trigger
   enabled="n"
   match="^(\s*)Reward of (?&lt;amount&gt;\d+) (?&lt;type&gt;.+) (.+) added.$"
   sequence="100"
   script="campaign_rewards"
   group="campaignRewards"
   regexp="y"
  >
  </trigger>
 <!-- -->
 <trigger
   enabled="n"
   match="^You receive (?&lt;bonus&gt;\d+) quest points bonus for your first campaign completed today.$"
   sequence="100"
   regexp="y"
   script="cp_bonus"
   group="campaignRewards"
  >
  </trigger>
  	 <trigger
   enabled="n"
   match="--------------------------------------------------------------"
   sequence="100"
   script="cp_done"
   group="cpdone"
  >
  </trigger>
  <trigger
   enabled="y"
   match="^Global Quest: Global quest \# *(?&lt;gqnum&gt;\d+) has been declared for levels (.*) to (.*)\.$"
   name="gqdeclared"
   script="gqs_called"
   sequence="100"
   regexp="y"
   omit_from_output="n"
  >
  </trigger>
</triggers>

<!--  Plugin help  -->

<aliases>
  <alias
   match="cpr"
   enabled="y"
   send_to="12"
   sequence="50"
   script="CampaignRequest"
  >
  </alias>
    <alias
   match="^cp ?(set room|room set|r|request|quit|i|info|today|check|quit|level)?"
   enabled="y"
   send_to="12"
   regexp="y"
   sequence="100"
   script="CampaignSettings"
  >
  </alias>
  <alias
   match="^qpschannel (.*)$"
   enabled="y"
   send_to="12"
   regexp="y"
   sequence="100"
   script="set_qps_channel"
  >
  </alias>
   <alias
   match="^q (last|set room|room set|r|re|req|requ|reque|request|points|info|time|c|co|com|comp|compl|comple|complet|complete|list|buy|sell|appraise|fail)?( .*)?"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
   script="QuestSettings"
  >
  </alias>
  <alias
   match="^faux"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
   script="faux"
  >
  </alias>
  <alias
   match="resettracker"
   enabled="y"
   send_to="12"
   sequence="100"
   script="ResetTrackerData"
  >
  </alias>
  <alias match="^(?:had|qpstrack) help$"
	enabled="y"
	sequence="100"
	send_to="12"
	regexp="y"
	keep_evaluating="y"
	>
	<send>
		HadarHelp()
	</send>
	</alias>
</aliases>

<script>
<![CDATA[
require "serialize"

local curlevel

function QPStimeDiff(t2,t1,script)
	local d1,d2,carry,diff = os.date('*t',t1),os.date('*t',t2),false,{}
	local colMax = {60,60,24,os.date('*t',os.time{year=d1.year,month=d1.month+1,day=0}).day,12}
	d2.hour = d2.hour - (d2.isdst and 1 or 0) + (d1.isdst and 1 or 0) -- handle dst
	for i,v in ipairs({'sec','min','hour','day','month','year'}) do
		diff[v] = d2[v] - d1[v] + (carry and -1 or 0)
		carry = diff[v] < 0
		if carry then diff[v] = diff[v] + colMax[i] end
	end
	for i,v in pairs(diff) do
		if script=="q" then
			Hadarsqpstrackersqtime[i]=v
		elseif script=="cp" then
			Hadarsqpstrackerscptime[i]=v
		end
	end
	return diff
end

function gmcp(what) --pulled from gmcp helper, lets see if fixes older version
	result, value = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval", what)
	if result ~= 0 then
		ColourNote ("orange", "", "Warning: Could not get GMCP value for " .. what)
		return nil
	else
		local luastmt = "ret = " .. value
		assert (loadstring (luastmt or "")) ()
		return ret
	end -- if
end -- gmcp

function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end

function set_qps_channel(name, line, wildcards)
	if wildcards[1] ~= nil then
		Hadarsqpstrackers.reportchan = wildcards[1]
		ColourNote("Cyan","","qpstrack Report channel set to: ","Teal","",Hadarsqpstrackers.reportchan)
	end
end

function CampaignSettings(name, line, wildcards)

local arg = string.lower(wildcards[1])

	if wildcards[1] == "" then
		--Send ("cp")
	elseif arg == "set room" or arg == "room set" then
		local _,room = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","room.info.num")
		cproom = utils.inputbox ("Input the number of the room your quest master is in", "cproom", tonumber(room), "Courier", 9)
		SaveState()
	elseif arg == "request" then
		Execute("cpr")
	elseif arg == "r" then
		Execute("cpr")
	elseif arg == "quit" then
		Send("cp quit")
	elseif arg == "info" or arg == "i" then
		Send("cp info")
	elseif arg == "today" then
		Send("cp today")
	elseif arg == "check" then
		Send("cp ch")
	elseif arg == "level" then
		SetCampaignLeveling()
	else
		SendSpecial("cp ".. args)
	end -- end if checks for cp
	
end--End CampaignSettings

function CampaignRequest()
local room = cproom --put the number of your questmaster here
local _,current_room = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","room.info.num")

	if room == 0 then 
		
	elseif room ~= current_room then
		Execute("mapper goto "..room)
	end
	SendSpecial("campaign request")
	if Hadarsqpstrackers.cpleveling==1 then
		if Hadarsqpstrackers.Noexp==1 then
			if Hadarsqpstrackers.cplevel==0 then
				SendSpecial("noexp")
			end
		end
	end
Hadarsqpstrackers.cplevel=1
SaveState()
end

function GetExp()
	Hadarsqpstrackers.Noexp = 0
	SaveState()
end

function DontGetExp()
	Hadarsqpstrackers.Noexp = 1
	SaveState()
end

function SetCampaignLeveling()
	if Hadarsqpstrackers.cpleveling == nil then
		Hadarsqpstrackers.cpleveling = 0
	end
	if Hadarsqpstrackers.cpleveling == 1 then
		Hadarsqpstrackers.cpleveling = 0
		ColourNote ("cyan", "", "CP leveling ","red", "", "OFF")
	elseif Hadarsqpstrackers.cpleveling == 0 then
		Hadarsqpstrackers.cpleveling = 1
		ColourNote ("cyan", "", "CP leveling ","green", "", "ON")
	end
	SaveState()
end

function campaign_rewards(name,line,wildcards)
	local type = wildcards.type
	local amount = wildcards.amount
	
	type = "endcp" .. type
	
	Hadarsqpstrackers[type] = amount
	EnableTriggerGroup("cpdone", true)
end

function cp_bonus(name,line,wildcards)
	local amount = wildcards.bonus
	Hadarsqpstrackers["endcpquest"] = Hadarsqpstrackers["endcpquest"] + amount
end

function cp_done()
	StopTime("cp")
	DoAfterSpecial (0.5, 'EnableTriggerGroup("cpdone", false)', sendto.script)
	DoAfterSpecial (0.5, 'EnableTriggerGroup("campaignRewards", false)', sendto.script)
end

function OnPluginSaveState ()
	SetVariable ("cproom", serialize.save ("cproom"))
	SetVariable ("Hadarsqpstrackers", serialize.save ("Hadarsqpstrackers"))
	SetVariable ("Hadarsqpstrackerstotal", serialize.save ("Hadarsqpstrackerstotal"))
	SetVariable ("Hadarsqpstrackersqtime", serialize.save ("Hadarsqpstrackersqtime"))
	SetVariable ("Hadarsqpstrackerslastreset", serialize.save ("Hadarsqpstrackerslastreset"))
	--ShowInfoBar (true)
end -- function OnPluginSaveState

function OnPluginInstall ()
	cproom=0
	Hadarsqpstrackers = {}
	Hadarsqpstrackersqtime = {}
	Hadarsqpstrackerstotal = {}
	Hadarsqpstrackerscptime = {}
	Hadarsqpstrackerslastreset = {}
	Hadarsqpstrackers.reportchan = "gt"
	assert (loadstring (GetVariable ("cproom") or "")) ()
	assert (loadstring (GetVariable ("Hadarsqpstrackers") or "")) ()
	assert (loadstring (GetVariable ("Hadarsqpstrackersqtime") or "")) ()
	assert (loadstring (GetVariable ("Hadarsqpstrackerstotal") or "")) ()
	assert (loadstring (GetVariable ("Hadarsqpstrackerslastreset") or "")) ()
	
	Hadarsqpstrackers["endcpquest"]=0
	Hadarsqpstrackers["endcptraining"]=0
	Hadarsqpstrackers["endcptrivia"]=0
	Hadarsqpstrackers["endcppractice"]=0
	Hadarsqpstrackers["endcpgold"]=0
	
	print("to see the help of all my scripts had help to see this one, qpstrack help")
	--ShowInfoBar (true)
	--InfoBackground ("white")
	--SetStatus("")
	
	CallPlugin("3e7dedbe37e44942dd46d264","Send_GMCP_Packet","request quest")
end

function NowLeveled()
	if Hadarsqpstrackers.cpleveling==1 and Hadarsqpstrackers.cplevel==1 then
		Hadarsqpstrackers.cplevel=0
		Hadarsqpstrackers.noexpfired=0
	end
end

function faux()
ColourNote("#159FE5","","+------------------------------- ","cyan","","Q","teal","","uest ","cyan","","S","teal","","tats ","#159FE5","","---------------------------------+")
ColourNote("#159FE5","","|","","","Tot Completed: ","","","[","","",string.format("%6.0f",10566),"","","]    ","","","Tot Failed : ","","","[","","",string.format("%6.0f",10566),"","","]    ","","","Success Ratio: ","","","[","","",string.format("%5.0f%%",10566),"","","]","#159FE5","","  |")
ColourNote("#159FE5","","|"..string.format("%77s"," ").."|")
ColourNote("#159FE5","","|             --","",""," Since "..string.format("%39s",Hadarsqpstrackerslastreset.fulldate),"",""," --             ","#159FE5","","|")
ColourNote("#159FE5","","|","","","Compl'd: ","","","[","","",string.format("%8.0f",10566),"","","]","","","   Failed : ","","","[","","",string.format("%6.0f",10566),"","","]","","","  Success: ","","","[","","",string.format("%6.0f",10566),"","","]","",""," Trivia: ","","","[","","",string.format("%6.0f",10566),"","","]","#159FE5","","  |")
ColourNote("#159FE5","","|","","","QP Tot : ","","","[","","",string.format("%8.0f",10566),"","","]","","","   Tier Qp: ","","","[","","",string.format("%6.0f",10566),"","","]","","","  Avg Qp : ","","","[","","",string.format("%6.0f",10566),"","","]","",""," Trains: ","","","[","","",string.format("%6.0f",10566),"","","]","#159FE5","","  |")
ColourNote("#159FE5","","|","","","Gold   : ","",""," [","","",string.format("%3.2fm",105.66),"","","]","","","   Bonus  : ","","","[","","",string.format("%6.0f",10566),"","","]","","","  MCCP   : ","","","[","","",string.format("%6.0f",10566),"","","]","",""," Pracs : ","","","[","","",string.format("%6.0f",10566),"","","]","#159FE5","","  |")
ColourNote("#159FE5","","|"..string.format("%77s"," ").."|")
ColourNote("#159FE5","","|","","",string.format("%14s"," "),"","","Time Spent   : ","","","[","","",string.format("%3.0f",10),"",""," days","","",string.format("%3.0f",10),"",""," hrs","","",string.format("%3.0f",10),"",""," mins","","",string.format("%3.0f",10),"",""," secs ","","","]","","",string.format("%14s"," "),"#159FE5","","|")
ColourNote("#159FE5","","|","","",string.format("%14s"," "),"","","Average Time : ","","","[","","",string.format("%11.0f",10),"",""," hrs","","",string.format("%3.0f",10),"",""," mins","","",string.format("%3.0f",10),"",""," secs","",""," ]","","",string.format("%14s"," "),"#159FE5","","|")
ColourNote("#159FE5","","+-----------------------------------------------------------------------------+")
end

function OnPluginBroadcast(msg, id, name, text)
  if id == "3e7dedbe37e44942dd46d264" then -- message from the GMCP Handler
    if (text == "comm.quest") then
		local res, dagmcp = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","comm.quest")
		
		assert(loadstring("LoadInfo = "..dagmcp or "")) ()
		
		for i,v in pairs(LoadInfo) do
		
			if i=="qp" then Hadarsqpstrackers.qp=v end
			if i=="tierqp" then Hadarsqpstrackers.tierqp=v end
			if i=="lucky" then Hadarsqpstrackers.lucky=v end
			if i=="double" then Hadarsqpstrackers.double=v end
			if i=="totqp" then Hadarsqpstrackers.totqp=v end
			if i=="pracs" then Hadarsqpstrackers.pracs=v end
			if i=="trains" then Hadarsqpstrackers.trains=v end
			if i=="daily" then Hadarsqpstrackers.daily=v end
			if i=="tp" then Hadarsqpstrackers.tp=v end
			if i=="gold" then Hadarsqpstrackers.gold=v end
			if i=="completed" then Hadarsqpstrackers.completed=v end
			if i=="opk" then Hadarsqpstrackers.opk=v end
			if i=="hardcore" then Hadarsqpstrackers.hardcore=v end
			
			if i=="action" and v=="comp" then
				Hadarsqpstrackers.time=1
				--InfoBackground ("white")
				SetStatus("")
			end -- End completed quest
			
			if i=="action" and v=="start" then
				Hadarsqpstrackers.time=2
			end -- End start of quest
			
			if i=="action" and v=="killed" then
				InfoBackground ("orange")
				SetStatus("Return To Questor")
			end
			
			if i=="action" and v=="ready" then
				InfoBackground ("red")
				SetStatus("Quest Time!!!")
			end
			
			if i=="action" and v=="fail" then
				InfoBackground ("white")
				SetStatus("")
			end
			
			if i=="action" and v=="timeout" then
				InfoBackground ("white")
				SetStatus("")
			end
		end
		
		if Hadarsqpstrackers.time==1 then 
			StopTime("q")
		elseif Hadarsqpstrackers.time==2 then
			StartTime("q")
		end
		
	end --end if comm.quest
		if (text=="char.status") then
		
		local _,tier = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","char.base.tier")
		local _,remorts = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","char.base.remorts")
		
		local tnl = gmcp("char.status.tnl")
			if Hadarsqpstrackers.cplevel==0 then
				if tnl <= 1000 then
					if Hadarsqpstrackers.noexpfired == 0 then
						if Hadarsqpstrackers.cpleveling == 1 then
							Hadarsqpstrackers.noexpfired=1
							SendSpecial("noexp")
						end --end cpleveling
					end --end noexpfired
				end --end under 1k tnl
			end --end cplevel
		end --end char.status
	
  end
end

function MakeOutput(where)

local output = "@CL@cast "..string.upper(where)
	if where=="q" then
		output = output.." @W(@R"..Hadarsqpstrackersqtime.hour.."@Wh @R"..Hadarsqpstrackersqtime.min.."@Wm @R"..Hadarsqpstrackersqtime.sec.."@Ws)@w @CT@cotal @CQ@cps@W: @R"..Hadarsqpstrackers.totqp.." @W/ @CB@creakdown@W: @R"..Hadarsqpstrackers.qp.."@C @Cb@case"
		if tonumber(Hadarsqpstrackers.lucky) ~= 0 then output = output.."@W, @R"..Hadarsqpstrackers.lucky.." @Cl@cucky" end
		if tonumber(Hadarsqpstrackers.tier) ~= 0 then output = output.."@W, @R"..Hadarsqpstrackers.tierqp.." @Ct@cier" end
		if tonumber(Hadarsqpstrackers.opk) ~= 0 then output = output.."@W, @R"..Hadarsqpstrackers.opk.." @Co@cpk" end
		if tonumber(Hadarsqpstrackers.hardcore) ~= 0 then output = output.."@W, @R"..Hadarsqpstrackers.hardcore.." @Ch@cardcore" end
	
		if tonumber(Hadarsqpstrackers.double) ~= 0 and tonumber(Hadarsqpstrackers.daily) ~= 0 then
			output = output.."@W, @GX3"
		elseif tonumber(Hadarsqpstrackers.double) ~= 0 and tonumber(Hadarsqpstrackers.daily) == 0 then
			output = output.."@W, @GX2"
		elseif tonumber(Hadarsqpstrackers.double) == 0 and tonumber(Hadarsqpstrackers.daily) ~= 0 then
			output = output.."@W, @GX2"
		end -- end the stupid figuring out if 2x or 3x exp
	
		output = output.."@W / @CB@conus@W: @R"..Hadarsqpstrackers.gold.." @CG@cold"
		if tonumber(Hadarsqpstrackers.pracs) ~= 0 then output = output.."@W, @R"..Hadarsqpstrackers.pracs.." @CP@cracs" end
		if tonumber(Hadarsqpstrackers.trains) ~= 0 then output = output.."@W, @R"..Hadarsqpstrackers.trains.." @CT@crains" end
		if tonumber(Hadarsqpstrackers.tp) ~= 0 then output = output.."@W, @R"..Hadarsqpstrackers.tp.." @CT@cps" end
		
	elseif string.lower(where) == "cp" then
		output = output .. " @W(@R"..Hadarsqpstrackerscptime["hour"].."@Wh @R"..Hadarsqpstrackerscptime["min"].."@Wm @R"..Hadarsqpstrackerscptime["sec"].."@Ws)@w @CQ@cPs@W: @R".. Hadarsqpstrackers["endcpquest"].." @CG@cold@W: @R" .. Hadarsqpstrackers["endcpgold"]
		
		if Hadarsqpstrackers["endcptrivia"]~=0 then
			output = output .. " @G!!!@CT@crivia @Cp@coint@G!!!"
			Hadarsqpstrackers["endcptrivia"]=0
		end
		if Hadarsqpstrackers["endcptraining"]~=0 then
			output = output .. "@W, @CT@crains @W: @R" .. Hadarsqpstrackers["endcptraining"]
			Hadarsqpstrackers["endcptraining"]=0
		end
		if Hadarsqpstrackers["endcppractice"]~=0 then
			output = output .. "@W, @CP@cracs @W: @R" .. Hadarsqpstrackers["endcppractice"]
			Hadarsqpstrackers["endcppractice"]=0
		end
		
	end -- end quest output

	output = output .. "@w"
	
	if tonumber(Hadarsqpstrackers.daily)==1 then
	Hadarsqpstrackers.dailyqps=Hadarsqpstrackers.qp+Hadarsqpstrackers.tierqp
	
	end
	
	
	return output
end--end makeoutput

function QuestSettings(name, line, wildcards)
 
	args = Trim(string.lower(wildcards[1]))
	param = Trim(string.lower(wildcards[2]))

	if args == "last" then
		local chan
		if param ~= "" then
			chan = param
			SendSpecial(chan.." "..MakeOutput("q"))
		else
			chan = "gt"
			SendSpecial(chan.." "..MakeOutput("q"))
		end
	
	elseif args == "set room" or args == "room set" then
		local _,room = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","room.info.num")
		cproom = utils.inputbox ("Input the number of the room your quest master is in", "quest", tonumber(room), "Courier", 9)
		SaveState()
	elseif args == "r" or args == "re" or args == "req" or args == "requ" or args == "reque" or args == "reques" or args == "request" then
		if room == 0 then 
	
		elseif room ~= current_room then
			Execute("mapper goto "..room)
		end
	Send("Quest request")
	elseif args == "points" then
		Send("quest points")
	elseif args == "info" then
		Send("quest info")
	elseif args == "time" then
		Send("quest time")
	elseif args == "c" or args == "co" or args == "com" or args == "comp" or args == "compl" or args == "ccomple" or args == "complet" or args == "complete" then
		Send("quest complete")
	elseif args == "list" then
		Send("quest list")
	elseif args == "buy" then
		if param == "" then
			Send("quest buy")
		else
			Send("quest buy "..param)
		end
	elseif args == "sell" then
		if param == "" then
			Send("quest sell")
		else
			Send("quest sell "..param)
		end
	elseif args == "appraise" then
		if param == "" then
			Send("quest appraise")
		else
			Send("quest appraise "..param)
		end
	elseif args == "fail" then
		Send("quest fail")
	elseif args == "" then
		Send("q")
	end--end if/elseif
end

function StartTime(arg)
	if arg == "q" then
		Hadarsqpstrackers["QstartTime"]=os.time()
	elseif arg == "cp" then
		Hadarsqpstrackers["CPstartTime"]=os.time()
	end
	Hadarsqpstrackers.time=0--work around maybe
end--End StartTime

function StopTime(arg)
	if arg == "q" then
		Hadarsqpstrackers.QstopTime=os.time()
		QPStimeDiff(os.time(),Hadarsqpstrackers.QstartTime,"q")
		Hadarsqpstrackers.QstopTime=os.time()
		
		SendSpecial(Hadarsqpstrackers.reportchan.." "..MakeOutput("q"))
	elseif arg == "cp" then
		Hadarsqpstrackers.CPstopTime=os.time()
		QPStimeDiff(os.time(),Hadarsqpstrackers["CPstartTime"],"cp")
		Hadarsqpstrackers.CPstopTime=os.time()
		
		SendSpecial(Hadarsqpstrackers.reportchan.." "..MakeOutput("cp"))
	end
	Hadarsqpstrackers.time=0--work around maybe
end--End StartTime

function ResetTrackerData()
Hadarsqpstrackerslastreset.fulldate=os.date("%A %B  %d, %Y %H:%M:%S")
Hadarsqpstrackerslastreset.epoch=os.time()
Hadarsqpstrackerstotal = {}
SaveState()
end--end resetting of data ... why anyone would want to beats me *crys sadly*

function HadarIsAmazing() --aka lets do math
if Hadarsqpstrackerstotal.comp == nil then Hadarsqpstrackerstotal.comp=0 end
if Hadarsqpstrackerstotal.qptot == nil then Hadarsqpstrackerstotal.qptot=0 end
if Hadarsqpstrackerstotal.gold == nil then Hadarsqpstrackerstotal.gold=0 end
if Hadarsqpstrackerstotal.failed == nil then Hadarsqpstrackerstotal.failed=0 end
if Hadarsqpstrackerstotal.tier == nil then Hadarsqpstrackerstotal.tier=0 end
if Hadarsqpstrackerstotal.bonus == nil then Hadarsqpstrackerstotal.bonus=0 end
if Hadarsqpstrackerstotal.success == nil then Hadarsqpstrackerstotal.success=0 end
if Hadarsqpstrackerstotal.avgqp == nil then Hadarsqpstrackerstotal.avgqp=0 end
if Hadarsqpstrackerstotal.trivia == nil then Hadarsqpstrackerstotal.trivia=0 end
if Hadarsqpstrackerstotal.trains == nil then Hadarsqpstrackerstotal.trains=0 end
if Hadarsqpstrackerstotal.pracs == nil then  Hadarsqpstrackerstotal.pracs=0 end
if Hadarsqpstrackerstotal.timespent == nil then Hadarsqpstrackerstotal.timespent=0 end
if Hadarsqpstrackerstotal.averagetime == nil then Hadarsqpstrackerstotal.averagetime=0 end


end--amazing hadar will never end!

function cp_start_tracking()
	Hadarsqpstrackers["CPstartTime"] = os.time()
end

function cp_end_tracking()
	QPStimeDiff(os.time(),Hadarsqpstrackers["CPstartTime"],"cp")
end

function gqs_called()
	--Sound("ding.wav")
	FlashIcon()
end
--ColourNote("#159FE5","","|"..string.format("%84s"," ").."|")
function HadarHelp()
	ColourNote("#159FE5","","+---------------------------------------","Green","","[","Cyan","","Q","Teal","","uest Point ","Cyan","","T","Teal","","racker","Green","","]","#159FE5","","----------------------------------------+")
	ColourNote("#159FE5","","|"..string.format("%99s"," ").." |")
		ColourNote("#159FE5","","|","#E55B15","",string.format("%-22s"," qpschannel <channel>"),"#159FE5","","-","#F1D566","",string.format("%-77s"," set the channel to report to."),"#159FE5","","|")
		ColourNote("#159FE5","","|","#E55B15","",string.format("%-22s"," cp set room"),"#159FE5","","-","#F1D566","",string.format("%-77s"," lets you set the room for your cp master"),"#159FE5","","|")
		ColourNote("#159FE5","","|","#E55B15","",string.format("%-22s"," cpr"),"#159FE5","","-","#F1D566","",string.format("%-77s"," go to the cp masters room and request a cp"),"#159FE5","","|")
		ColourNote("#159FE5","","|","#E55B15","",string.format("%-22s"," cp level"),"#159FE5","","-","#F1D566","",string.format("%-77s"," turn cp leveling on or off (toggles noexp at less then 1k tnl after a level)"),"#159FE5","","|")
		ColourNote("#159FE5","","|","#E55B15","",string.format("%-22s"," cpr"),"#159FE5","","-","#F1D566","",string.format("%-77s"," go to the cp masters room and request a cp"),"#159FE5","","|")
		ColourNote("#159FE5","","|","#E55B15","",string.format("%-22s"," q set room"),"#159FE5","","-","#F1D566","",string.format("%-77s"," sets quest master room"),"#159FE5","","|")
	ColourNote("#159FE5","","|"..string.format("%99s"," ").." |")
	ColourNote("#159FE5","","+"..string.rep("-",100).."+")
end

]]>
</script> 

</muclient>
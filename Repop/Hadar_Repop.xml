<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Hadar_Repop"
   author="Hadar"
   id="d04caa4c8c9efbea17eab893"
   language="Lua"
   purpose="just to announce repop"
   save_state="y"
   date_written="2016-09-20 09:04:48"
   requires="4.00"
   version="1.54"
   >
</plugin>

<aliases>
	<alias
   script="repopset"
   match="^setrepop$"
   enabled="y"
   regexp="y"
   sequence="100"
  >
  </alias>
  <alias
   script="setChannel"
   match="^repopchannel (.*)$"
   enabled="y"
   regexp="y"
   sequence="100"
  >
  </alias>
  <alias match="^(?:had|repop) help$"
	enabled="y"
	sequence="100"
	send_to="12"
	regexp="y"
	keep_evaluating="y"
	>
	<send>
		HadarHelp()
	</send>
	</alias>
</aliases>

<script>
<![CDATA[

require "gmcphelper" -- adds the gmcp() function for simplifying data access
dofile(GetInfo(60) .. "aardwolf_colors.lua")

function hadarprint(str,level)

	if level == "debug" and expTracker["GL"].Debug == "yes" then
		AnsiNote(ColoursToANSI("@G[@YDEBUG@G]@W:@w"..str))
	elseif level == "error" then
          AnsiNote(ColoursToANSI("@R[@MRepop @rERROR@R]@W:@w"..str))
     elseif level == "script" then
          AnsiNote(ColoursToANSI("@G[@CR@cepop@CT@cracker@G]@c"..str))
     else
		AnsiNote(ColoursToANSI(str))
	end
	
end

function gmcp(what) --pulled from gmcp helper, lets see if fixes older version
	result, value = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval", what)
	if result ~= 0 then
		ColourNote ("orange", "", "Warning: Could not get GMCP value for " .. what)
		return nil
	else
		local luastmt = "ret = " .. value
		assert (loadstring (luastmt or "")) ()
		return ret
	end -- if
end -- gmcp

function interp(s, tab)
  return (s:gsub('($%b{})', function(w) return tab[w:sub(3, -2)] or w end))
end

function OnPluginSaveState ()
	SetVariable ("repopVar", "repopVar = " .. serialize.save_simple (repopVar))
	SetVariable ("repoppastfirstinstall", "true")
end -- function OnPluginSaveState

function setChannel(name, line, wildcards)
	if wildcards[1] ~= nil then
		repopVar.chan = wildcards[1]
		hadarprint("@CRepop report channel set to @G"..repopVar.chan,"script")
	end
end

function repopset()
	HadarBackup = repopVar.repopString
	repopVar.repopString = utils.inputbox ("Has 3 variables:\n${name} - Area\n${hour} - Time hours\n${min} - Time mins", "Look of repopTracker", repopVar.repopString, "Courier", 9)
	if repopVar.repopString ~= nil then
		hadarprint("repop will look like: "..repopVar.repopString,"script")
	else
		repopVar.repopString = HadarBackup
	end
	SaveState()
end


function OnPluginInstall ()
   	if GetVariable ("enabled") == "false" then
		ColourNote ("yellow", "", "Warning: Plugin " .. GetPluginName ().. " is currently disabled.")
		check (EnablePlugin(GetPluginID (), false))
		return
	end -- they didn't enable us last time
	
	hadarprint("had help (to see all of hadar's plugin helpfiles), or repop help to just see this one","script")
  
	OnPluginEnable ()
end

function OnPluginEnable ()
	
	repopVar = {}
	
	if GetVariable ("repoppastfirstinstall") == "true" then
		assert (loadstring (GetVariable ("repopVar") or "")) ()
	else
		buildInitial()
	end

end

function buildInitial()
	repopVar.repopString = "@W${name} @Cr@cepoped @Ca@ct @R${hour}@w:@R${min}@w"
	repopVar.chan = "echo"
	SaveState()
end

function OnPluginBroadcast(msg, id, name, text)

local color1 = "@C"
local color2 = "@c"
local timecolor = "@c"
local terminator = "@W"
local zone
local time

  if id == "3e7dedbe37e44942dd46d264" then -- message from the GMCP Handler
    if (text == "comm.repop") then
	  for _,v in pairs(gmcp("comm.repop")) do
		 --zone = string.gsub(v, "(%l)(%w*)", function(a,b) return color1..string.upper(a)..color2..string.lower(b) end)
		 zone = v
		 timehour = os.date("%H")
		 timemin = os.date("%M")
	  end
	  	repopVar.Data = interp(repopVar.repopString, {name = zone, hour = timehour, min = timemin})
		--repopVar.Data = string.format(repopVar.repopString,zone,timehour,timemin)
		if repopVar.chan == "echo" or repopVar.chan == "print" then
			hadarprint(repopVar.Data)
		else
			SendSpecial(repopVar.chan.." "..repopVar.Data)
		end
		
		
		
    end
  end
end

function HadarHelp()
	ColourNote("#159FE5","","+---------------------------------","Green","","[","Cyan","","R","Teal","","epop ","Cyan","","T","Teal","","eller","Green","","]","#159FE5","","---------------------------------+")
	ColourNote("#159FE5","","|"..string.format("%84s"," ").."|")
	ColourNote("#159FE5","","|","#E55B15","",string.format("%-19s"," repopchannel <Channel>"),"#159FE5","","-","#F1D566","",string.format("%-64s"," Change output to channel"),"#159FE5","","|")
	ColourNote("#159FE5","","|"..string.format("%84s"," ").."|")
	ColourNote("#159FE5","","|","#E55B15","",string.format("%-19s"," setrepop"),"#159FE5","","-","#F1D566","",string.format("%-64s"," lets you change what the output will look like"),"#159FE5","","|")
	ColourNote("#159FE5","","|"..string.format("%84s"," ").."|")
	ColourNote("#159FE5","","+"..string.rep("-",84).."+")
end
]]>
</script>

</muclient>
